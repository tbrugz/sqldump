# just a variable for using ahead - name has no special meaning 
#outputdir=output/test2
basedir=output/test1

#
# output props
#
sqldump.mainoutputfilepattern=${outputdir}/${schemaname}_${objecttype}_dump.sql
sqldump.outputobjectwithreferencingtable=grant,index
sqldump.outputfilepattern.maptype.PROCEDURE=EXECUTABLE
sqldump.outputfilepattern.maptype.TRIGGER=EXECUTABLE
sqldump.outputfilepattern.maptype.FUNCTION=EXECUTABLE
sqldump.outputfilepattern.bytype.EXECUTABLE=${outputdir}/EXECUTABLEs.sql

# other sqldump.outputfilepattern examples:
#sqldump.outputfilepattern=output/${schemaname}/${objecttype}/${objectname}.sql
#sqldump.outputfilepattern=output/${objecttype}/${schemaname}_${objectname}.sql
#sqldump.outputobjectwithreferencingtable=grant, index, fk, trigger

#
# delete files
# option option to delete initial output dir contents (except special hidden files (unix dotfiles, eg: .svn, .git, .hg) and files that starts with "_")
#
sqldump.deleteregularfilesfromdir=${outputdir}

#
# schema grab props
#

# grabclass can be: JDBCSchemaGrabber, JAXBSchemaXMLSerializer, SchemaSerializer, CastorSchemaXMLSerializer
sqldump.schemagrab.grabclass=JDBCSchemaGrabber

sqldump.dotests=false
sqldump.doschemadump=true
# dumpclasses can be: SchemaModelScriptDumper, SchemaSerializer, JAXBSchemaXMLSerializer, CastorSchemaXMLSerializer, graph.Schema2GraphML
sqldump.schemadump.dumpclasses=SchemaModelScriptDumper, SchemaSerializer, JAXBSchemaXMLSerializer, graph.Schema2GraphML
sqldump.doschemadump.grants=true
sqldump.doschemadump.fks=true
sqldump.doschemadump.exportedfks=true
sqldump.doschemadump.fks.atend=true
sqldump.doschemadump.pks=true
# sqldump.dbspecificfeatures.grabindexes may be used instead of sqldump.doschemadump.indexes (really better performance on oracle)
#sqldump.doschemadump.indexes=false
sqldump.doschemadump.ignoretableswithzerocolumns=true

# schema names to dump
#sqldump.dumpschemapattern=APP

sqldump.dumpwithschemaname=false

# recursive dump of tables based on FKs
sqldump.doschemadump.recursivedumpbasedonfks=true
sqldump.doschemadump.recursivedumpbasedonfks.exportedfks=false
sqldump.doschemadump.recursivedumpbasedonfks.deep=true

#
# 'sqldump.fromdbid' selects which specificgrabclass to use, column type conversion, ... 
#
sqldump.todbid=pgsql
sqldump.fromdbid.autodetect=true

sqldump.dumpsynonymastable=false
sqldump.dumpviewastable=false
sqldump.dumpmaterializedviewastable=false


#
# dbms specific features grab
#
sqldump.usedbspecificfeatures=true

# grab dbspecific by type: default is true
#sqldump.dbspecificfeatures.grabindexes=true
#sqldump.dbspecificfeatures.grabexecutables=false
#sqldump.dbspecificfeatures.grabviews=false
#sqldump.dbspecificfeatures.grabtriggers=false
#sqldump.dbspecificfeatures.grabsynonyms=false
#sqldump.dbspecificfeatures.grabsequences=false
#sqldump.dbspecificfeatures.grabextraconstraints=false

sqldump.dbspecificfeatures.sequencestartwithdump=false
sqldump.dbspecificfeatures.grabfkfromuk=false


#
# data dump props
#
sqldump.dodatadump=false


#
# serialization & xml serialization
#
sqldump.serialization.outfile=${outputdir}/schemaModel.ser
sqldump.serialization.infile=${outputdir}/schemaModel.ser

sqldump.xmlserialization.jaxb.outfile=${outputdir}/schemaModel.jaxb.xml
sqldump.xmlserialization.jaxb.infile=${outputdir}/schemaModel.jaxb.xml

#sqldump.xmlserialization.castor.outfile=${outputdir}/schemaModel.castor.xml
#sqldump.xmlserialization.castor.infile=${outputdir}/schemaModel.castor.xml


#
# graphML output
#
sqldump.graphmldump.outputfile=${outputdir}/db-schema.graphml
#sqldump.graphmldump.showschemaname=true|false
#
# default edgelabel: NONE
#sqldump.graphmldump.edgelabel=FK|FKANDCOLUMNS|COLUMNS|NONE
#sqldump.graphmldump.nodeheightbycolsnumber=true|false

