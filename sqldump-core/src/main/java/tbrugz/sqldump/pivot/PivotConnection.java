package tbrugz.sqldump.pivot;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

import tbrugz.sqldump.jdbc.AbstractConnectionDecorator;

public class PivotConnection extends AbstractConnectionDecorator {
	
	public PivotConnection(Connection conn) {
		super(conn);
	}
	
	void debug(String message) {
		//System.out.println(message);
	}
	
	//TODO
	public Statement createStatement() throws SQLException {
		debug("PivotConnection.createStatement()");
		return new PivotStatement<Statement>(conn.createStatement());
	}

	//TODO
	public PreparedStatement prepareStatement(String sql) throws SQLException {
		debug("PivotConnection.prepareStatement(sql)");
		return new PivotPreparedStatement(conn.prepareStatement(sql), sql);
	}

	//TODO
	public Statement createStatement(int resultSetType, int resultSetConcurrency)
			throws SQLException {
		debug("PivotConnection.createStatement(int resultSetType, int resultSetConcurrency)");
		return new PivotStatement<Statement>(conn.createStatement(resultSetType, resultSetConcurrency));
	}

	//TODO
	public PreparedStatement prepareStatement(String sql, int resultSetType,
			int resultSetConcurrency) throws SQLException {
		debug("PivotConnection.prepareStatement(String sql, int resultSetType, int resultSetConcurrency)");
		return new PivotPreparedStatement(conn.prepareStatement(sql, resultSetType, resultSetConcurrency), sql);
	}

	//TODO
	public Statement createStatement(int resultSetType,
			int resultSetConcurrency, int resultSetHoldability)
			throws SQLException {
		debug("PivotConnection.createStatement(int resultSetType, int resultSetConcurrency, int resultSetHoldability)");
		return new PivotStatement<Statement>(conn.createStatement(resultSetType, resultSetConcurrency, resultSetHoldability));
	}

	//TODO
	public PreparedStatement prepareStatement(String sql, int resultSetType,
			int resultSetConcurrency, int resultSetHoldability)
			throws SQLException {
		System.out.println("PivotConnection.prepareStatement(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability)");
		return new PivotPreparedStatement(conn.prepareStatement(sql, resultSetType, resultSetConcurrency, resultSetHoldability), sql);
	}

	//TODO
	public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys)
			throws SQLException {
		debug("PivotConnection.prepareStatement(String sql, int autoGeneratedKeys)");
		return new PivotPreparedStatement(conn.prepareStatement(sql, autoGeneratedKeys), sql);
	}

	//TODO
	public PreparedStatement prepareStatement(String sql, int[] columnIndexes)
			throws SQLException {
		debug("PivotConnection.prepareStatement(String sql, int[] columnIndexes)");
		return new PivotPreparedStatement(conn.prepareStatement(sql, columnIndexes), sql);
	}

	//TODO
	public PreparedStatement prepareStatement(String sql, String[] columnNames)
			throws SQLException {
		debug("PivotConnection.prepareStatement(String sql, String[] columnNames)");
		return new PivotPreparedStatement(conn.prepareStatement(sql, columnNames), sql);
	}

}
