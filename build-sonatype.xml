<project name="sonatype-deploy" default="deploy" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<property environment="env" />
	
	<!-- Download Maven Ant Tasks from http://maven.apache.org/ant-tasks/download.html and put it into ~/.ant/lib/ -->
	<!-- more info: https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-7c.DeploySnapshotsandStageReleaseswithAnt -->
	
	<property name="dist" location="dist" />
	<property name="artifactId" value="${ivy.module}" />

	<!--property file="${src}/sqldump-version.properties"/-->

	<!-- define Maven coordinates -->
	<!--property name="groupId" value="org.bitbucket.tbrugz" /-->
	<!--property name="artifactId" value="sqldump" /-->
	<!--property name="version" value="0.9.11" /-->

	<!-- define artifacts' name, which follows the convention of Maven -->
	<property name="maven-pom" value="${dist}/poms/${artifactId}.pom" />
	<property name="maven-jar" value="${dist}/jars/${artifactId}.jar" />
	<property name="maven-javadoc-jar" value="${dist}/javadocs/${artifactId}.jar" />
	<property name="maven-sources-jar" value="${dist}/sources/${artifactId}.jar" />

	<!-- defined maven snapshots and staging repository id and url -->
	<property name="maven-snapshots-repository-id" value="sonatype-nexus-snapshots" />
	<property name="maven-snapshots-repository-url" value="https://oss.sonatype.org/content/repositories/snapshots/" />
	<property name="maven-staging-repository-id" value="sonatype-nexus-staging" />
	<property name="maven-staging-repository-url" value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />

	<property name="maven-localRepositoryPath" value="${user.home}/.m2/repository" />

	<target name="info">
		<echo message="java.home: ${java.home}" />
		<echo message="maven.home: ${maven.home}" />
		<echo message="env.M2_HOME: ${env.M2_HOME}" />
		<echo message="artifactId: ${artifactId}" />
	</target>
		
	<target name="prepare-publish-sonatype" depends="info">
		<echo message="version: ${version}"/>
		<fail message="version must be set" unless="version"/>
		<condition property="version-snapshot">
			<matches pattern="SNAPSHOT" string="${version}"/>
		</condition>
	</target>
	
	<target name="mvn-install-files" depends="info, mvn-install-file-jar, mvn-install-file-sources-jar, mvn-install-file-pom" description="install files">
	</target>
	
	<target name="mvn-install-file-jar" description="install jar file">
		<artifact:mvn>
			<arg value="org.apache.maven.plugins:maven-install-plugin:2.3.1:install-file"/>
			<arg value="-DpomFile=${maven-pom}" />
			<arg value="-Dfile=${maven-jar}" />
			<arg value="-DlocalRepositoryPath=${maven-localRepositoryPath}"/>
			<!--arg value="-X" />
			<arg value="-e" /-->
		</artifact:mvn>
	</target>

	<target name="mvn-install-file-sources-jar" description="install sources jar file">
		<artifact:mvn>
			<arg value="org.apache.maven.plugins:maven-install-plugin:2.3.1:install-file"/>
			<arg value="-DpomFile=${maven-pom}" />
			<arg value="-Dfile=${maven-sources-jar}" />
			<arg value="-Dclassifier=sources" />
			<arg value="-DlocalRepositoryPath=${maven-localRepositoryPath}"/>
			<!--arg value="-X" />
			<arg value="-e" /-->
		</artifact:mvn>
	</target>

	<target name="mvn-install-file-pom" description="install pom file">
		<artifact:mvn>
			<arg value="org.apache.maven.plugins:maven-install-plugin:2.3.1:install-file"/>
			<arg value="-DpomFile=${maven-pom}" />
			<arg value="-Dfile=${maven-pom}" />
			<arg value="-Dpackaging=pom" />
			<arg value="-DlocalRepositoryPath=${maven-localRepositoryPath}"/>
			<!--arg value="-X" />
			<arg value="-e" /-->
		</artifact:mvn>
	</target>

	<!-- XXX not working -->
	<target name="mvn-install" depends="info" description="install maven artifacts">
		<artifact:mvn>
			<arg value="install"/>
			<!--arg value="-X" />
			<arg value="-e" /-->
		</artifact:mvn>
	</target>
	
	<target name="deploy" depends="prepare-publish-sonatype" description="deploy snapshot version to Maven snapshot repository">
		<echo message="artifactId: ${artifactId}"/>
		<fail message="Must be SNAPSHOT version" unless="version-snapshot"/>

		<!-- deploy the main artifact -->
		<artifact:mvn>
			<arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
			<arg value="-Durl=${maven-snapshots-repository-url}" />
			<arg value="-DrepositoryId=${maven-snapshots-repository-id}" />
			<arg value="-DpomFile=${maven-pom}" />
			<arg value="-Dfile=${maven-jar}" />
			<!--arg value="-X" />
			<arg value="-e" /-->
		</artifact:mvn>

		<!-- deploy the sources artifact -->
		<artifact:mvn>
			<arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
			<arg value="-Durl=${maven-snapshots-repository-url}" />
			<arg value="-DrepositoryId=${maven-snapshots-repository-id}" />
			<arg value="-DpomFile=${maven-pom}" />
			<arg value="-Dfile=${maven-sources-jar}" />
			<arg value="-Dclassifier=sources" />
		</artifact:mvn>
	</target>

	<!-- before this, update project version (both build.xml and pom.xml) from SNAPSHOT to RELEASE -->
	<target name="stage" depends="prepare-publish-sonatype" description="deploy release version to Maven staging repository">
		<echo message="artifactId: ${artifactId}"/>
		<fail message="Must NOT be SNAPSHOT version" if="version-snapshot"/>
		
		<loadfile property="gpg.passphrase" srcFile="${user.home}/.gpgcredentials"/>
		<!--
		<property file="${user.home}/.mvncredentials"/>
		<echo message="sonatype-nexus-staging.username: ${sonatype-nexus-staging.username}"/>
		<echo message="sonatype-nexus-staging.password: ${sonatype-nexus-staging.password}"/>
		-->
		
		<!-- sign and deploy the main artifact -->
		<artifact:mvn>
			<arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
			<arg value="-Durl=${maven-staging-repository-url}" />
			<arg value="-DrepositoryId=${maven-staging-repository-id}" />
			<arg value="-DpomFile=${maven-pom}" />
			<arg value="-Dfile=${maven-jar}" />
			<arg value="-Pgpg" />
			<arg value="-Dgpg.passphrase=${gpg.passphrase}" />
			<!--<arg value="-Dsonatype-nexus-staging.username=${sonatype-nexus-staging.username}" />
			<arg value="-Dsonatype-nexus-staging.password=${sonatype-nexus-staging.password}" />-->
		</artifact:mvn>

		<!-- sign and deploy the sources artifact -->
		<artifact:mvn>
			<arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
			<arg value="-Durl=${maven-staging-repository-url}" />
			<arg value="-DrepositoryId=${maven-staging-repository-id}" />
			<arg value="-DpomFile=${maven-pom}" />
			<arg value="-Dfile=${maven-sources-jar}" />
			<arg value="-Dclassifier=sources" />
			<arg value="-Pgpg" />
			<arg value="-Dgpg.passphrase=${gpg.passphrase}" />
		</artifact:mvn>

		<!-- sign and deploy the javadoc artifact -->
		<artifact:mvn>
			<arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
			<arg value="-Durl=${maven-staging-repository-url}" />
			<arg value="-DrepositoryId=${maven-staging-repository-id}" />
			<arg value="-DpomFile=${maven-pom}" />
			<arg value="-Dfile=${maven-javadoc-jar}" />
			<arg value="-Dclassifier=javadoc" />
			<arg value="-Pgpg" />
			<arg value="-Dgpg.passphrase=${gpg.passphrase}" />
		</artifact:mvn>
	</target>

</project>