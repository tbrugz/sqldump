
###############################################################################
# sqldump config file                                                         #
# https://bitbucket.org/tbrugz/sqldump                                        #
###############################################################################

#
# Example file using ResultSet2GraphML
#
# use to generate a graph of object dependencies with Oracle Database
#

outputdir=${user.home}/sqldump-oracle-deps/
schema=<schema-name>

###

sqldump.processingclasses=graph.ResultSet2GraphML

###

sqldump.graphmlqueries=deps

sqldump.graphmlquery.deps.sql=\
select status||'.'||type as source_type, type||':'||owner||'.'||name as source, \
  referenced_status||'.'||referenced_type as target_type, referenced_type||':'||referenced_owner||'.'||referenced_name as target, \
  status, referenced_status as parent_status \
from \
( \
    select dep.owner, dep.type, dep.name, obj.status, dep.referenced_owner, dep.referenced_type, dep.referenced_name, pobj.status as referenced_status \
    from \
    DBA_DEPENDENCIES dep, DBA_OBJECTS obj, DBA_OBJECTS pobj \
    where dep.owner = obj.owner \
    and dep.name = obj.object_name \
    and dep.referenced_owner = pobj.owner \
    and dep.referenced_name = pobj.object_name \
) \
where owner = '${schema}' \
and name not like 'QUEST_%' \
and name not like 'TOAD_%' \
and referenced_owner <> 'SYS' \
and referenced_name <> 'DUAL' \
order by source
sqldump.graphmlquery.deps.outputfile=${outputdir}/deps.graphml
sqldump.graphmlquery.deps.snippetsfile=${propfilebasedir}/graphml-snippets-deps.properties

############

sqldump.driverclass=oracle.jdbc.driver.OracleDriver
sqldump.dburl=jdbc:oracle:thin:@<host>:<port>:<dbid>

sqldump.user=${schema}
sqldump.password=****
