# TODO: validate
dbids=oracle, pgsql90-, pgsql, derby, hsqldb, mysql, sqlite

#
# database id autodetect:
#
# oracle: Oracle; Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production With the Partitioning, OLAP, Data Mining and Real Application Testing options [10.2]
# pgsql:  PostgreSQL; 8.3.11 [8.3]
# derby:  Apache Derby; 10.8.1.2 - (1095077) [10.8]
# hsqldb: HSQL Database Engine; 2.2.5 [2.2]
#
dbid.oracle.detectregex=Oracle
dbid.pgsql.detectregex=PostgreSQL
dbid.derby.detectregex=Apache Derby
dbid.hsqldb.detectregex=HSQL .+ Engine
dbid.mysql.detectregex=MySQL
dbid.sqlite.detectregex=SQLite

dbid.pgsql90-.detectregex=PostgreSQL
dbid.pgsql90-.detectversion.major.equalorless=9
dbid.pgsql90-.detectversion.minor.equalorless=0

# non-default sql quote string (default is ")

#deprecated
dbid.mysql.sqlquotestring=`

#
# mapping: 
#   from.<dbmgr-id>.<dbmgr-type>=<java-type>
#   to.<dbmgr-id>.<java-type>=<dbmgr-type> 
#
# obs: no mapping means thart database uses default ANSI sql (java) type
#
# see: java.sql.Types
#

#
# mapping from <db> to java-sql-type/ANSI
#
from.oracle.VARCHAR2=VARCHAR
from.oracle.NUMBER=NUMERIC
from.oracle.LONG=NUMERIC

from.pgsql.INT4=INTEGER
from.pgsql.INT8=INTEGER
from.pgsql.BOOL=SMALLINT
from.pgsql.BYTEA=BLOB
from.pgsql.TEXT=BLOB

#
# mapping from java-sql-type/ANSI to <db>
#
to.oracle.VARCHAR=VARCHAR2
to.pgsql.BLOB=OID

#from.oracle.BLOB=BLOB
#to.pgsql.VARCHAR=VARCHAR
#to.pgsql.NUMERIC=NUMERIC

#
# types with no precision (default is true)
#
# ex: DATE, BLOB, ...
#
type.BLOB.useprecision=false
type.OID.useprecision=false
type.DATE.useprecision=false

type.donotuseprecision=LONG RAW

#postgresql
type.TEXT.useprecision=false
type.TIMESTAMP.useprecision=false
# int4 ? float8 ? bool ? varchar(2147483647)?

#mysql fields
type.MEDIUMTEXT.useprecision=false
type.DATETIME.useprecision=false

#
# tests for database conversion
#

type.INT4.useprecision=false
type.INT8.useprecision=false
type.FLOAT8.useprecision=false
type.BOOL.useprecision=false
type.SMALLINT.useprecision=false

#???
type.INTEGER.useprecision=false

# TODO: database-dependent '.useprecision' ?  
# TODO: families of dbids? pgsql: pgsql90-, pgsql, ...


#
# known privileges
#
# XXXxx: define ${privileges.base}?
#
privileges.base  =SELECT, INSERT, UPDATE, DELETE, ALTER, REFERENCES, INDEX
#privileges.oracle=SELECT, INSERT, UPDATE, DELETE, ALTER, REFERENCES, INDEX, DEBUG, FLASHBACK, ON_COMMIT_REFRESH, QUERY_REWRITE
#privileges.pgsql=SELECT, INSERT, UPDATE, DELETE, ALTER, REFERENCES, INDEX, RULE, TRIGGER
privileges.oracle=${privileges.base}, DEBUG, FLASHBACK, ON_COMMIT_REFRESH, QUERY_REWRITE
privileges.pgsql =${privileges.base}, RULE, TRIGGER

#
# db specific grab classes
#
dbms.oracle.specificgrabclass=tbrugz.sqldump.dbmsfeatures.OracleFeatures
dbms.pgsql.specificgrabclass=tbrugz.sqldump.dbmsfeatures.PostgreSQLFeatures
dbms.pgsql90-.specificgrabclass=tbrugz.sqldump.dbmsfeatures.PostgreSQL90Features
dbms.derby.specificgrabclass=tbrugz.sqldump.dbmsfeatures.DerbyFeatures
dbms.hsqldb.specificgrabclass=tbrugz.sqldump.dbmsfeatures.HSQLDBFeatures
dbms.mysql.specificgrabclass=tbrugz.sqldump.dbmsfeatures.MySQLFeatures
dbms.sqlite.specificgrabclass=tbrugz.sqldump.dbmsfeatures.SQLiteFeatures

dbms.<example>.specificgrabclass=tbrugz.sqldump.dbmsfeatures.InformationSchemaFeatures
