
dbids=<default>, oracle, pgsql90-, pgsql, derby, hsqldb, mysql, neo4j, sqlite, h2, \
    monetdb, msaccess, drizzle, firebird, virtuoso, sqlserver, db2, drill, presto, opendistro-elastic, \
    avatica, spanner

#
# database id autodetect:
#
# oracle: Oracle; Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production With the Partitioning, OLAP, Data Mining and Real Application Testing options [10.2]
# pgsql:  PostgreSQL; 8.3.11 [8.3]
# derby:  Apache Derby; 10.8.1.2 - (1095077) [10.8]
# hsqldb: HSQL Database Engine; 2.2.5 [2.2]
#
dbid.oracle.detectregex=Oracle
dbid.pgsql.detectregex=PostgreSQL
dbid.derby.detectregex=Apache Derby
dbid.hsqldb.detectregex=HSQL .+ Engine
dbid.mysql.detectregex=MySQL|MariaDB
dbid.sqlite.detectregex=SQLite
dbid.h2.detectregex=H2
dbid.monetdb.detectregex=MonetDB
dbid.msaccess.detectregex=ACCESS
#dbid.msaccess.detectregex.url=jdbc:odbc:Driver=\\{Microsoft\\s+Access\\s+Driver\\s*\\(\\*\\.mdb\\)\\}.*
dbid.drizzle.detectregex=Drizzle
dbid.firebird.detectregex=Firebird.*
dbid.virtuoso.detectregex=.* Virtuoso .*
dbid.sqlserver.detectregex=Microsoft SQL Server
dbid.neo4j.detectregex=Neo4j
dbid.db2.detectregex=DB2/.*
dbid.drill.detectregex=Apache Drill Server
dbid.presto.detectregex=Presto
dbid.opendistro-elastic.detectregex=Elasticsearch
dbid.avatica.detectregex=Avatica
dbid.spanner.detectregex=Google Cloud Spanner

dbid.pgsql90-.detectregex=PostgreSQL
dbid.pgsql90-.detectversion.major.equalorless=9
dbid.pgsql90-.detectversion.minor.equalorless=0

#
# non-default sql quote string (default is ")
#

#dbid.mysql.sqlquotestring=`
#dbid.msaccess.sqlquotestring="
#dbid.drizzle.sqlquotestring=`


#
# mapping: 
#   from.<dbmgr-id>.<dbmgr-type>=<java-type>
#   to.<dbmgr-id>.<java-type>=<dbmgr-type> 
#
# obs: no mapping means that database uses default ANSI sql (java) type
#
# see: java.sql.Types
#

#
# mapping from <db> to java-sql-type/ANSI
#
from.oracle.VARCHAR2=VARCHAR
from.oracle.NUMBER=NUMERIC
from.oracle.LONG=NUMERIC

from.pgsql.INT2=SMALLINT
from.pgsql.INT4=INTEGER
from.pgsql.INT8=BIGINT
from.pgsql.BOOL=BOOLEAN
from.pgsql.BYTEA=BLOB
from.pgsql.TEXT=CLOB
from.pgsql.BPCHAR=CHAR

from.mysql.DATETIME=TIMESTAMP
from.mysql.DOUBLE=DOUBLE PRECISION
from.mysql.INT=INTEGER
from.mysql.DEC=DECIMAL
from.mysql.FIXED=DECIMAL

# firebird blob subtypes - http://www.firebirdfaq.org/faq165/
from.firebird.BLOB\ SUB_TYPE\ 0=BLOB
from.firebird.BLOB\ SUB_TYPE\ 1=CLOB

# spanner - https://cloud.google.com/spanner/docs/data-definition-language#data_types
from.spanner.BOOL=BOOLEAN
from.spanner.FLOAT64=DOUBLE PRECISION
from.spanner.INT64=INTEGER
from.spanner.STRING=VARCHAR

# sqlserver - https://docs.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql?view=sql-server-ver15
from.sqlserver.DATETIME=TIMESTAMP
from.sqlserver.DATETIME2=TIMESTAMP
from.sqlserver.VARBINARY=BLOB
#from.sqlserver.VARCHAR(MAX)=CLOB

#
# mapping from java-sql-type/ANSI to <db>
#
to.oracle.VARCHAR=VARCHAR2

to.pgsql.BLOB=BYTEA
to.pgsql.CLOB=TEXT
to.pgsql.TINYINT=SMALLINT
# tinyint not ANSI? sql server & mysql do have it (http://stackoverflow.com/a/2991419/616413)

to.mysql.CLOB=TEXT

to.sqlserver.TIMESTAMP=DATETIME2
#to.sqlserver.CLOB=VARCHAR(MAX)
to.sqlserver.CLOB=VARCHAR
to.sqlserver.BLOB=VARBINARY

#
# types with no precision (default is true)
#
# ex: DATE, BLOB, ...
#
# some info:
#   SQL-92: http://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt - section 6?
#   ANSI/ODBC/Oracle type mapping: http://docs.oracle.com/cd/B10500_01/server.920/a96544/apb.htm
#
type.BLOB.useprecision=false
type.CLOB.useprecision=false
type.OID.useprecision=false
type.BOOLEAN.useprecision=false

# ansi sql92 says this should not have precision:
type.INTEGER.useprecision=false
type.INT.useprecision=false
type.SMALLINT.useprecision=false
type.BIGINT.useprecision=false
type.REAL.useprecision=false
type.DOUBLE\ PRECISION.useprecision=false
type.DATE.useprecision=false
type.BOOLEAN.useprecision=false

#oracle
type.LONG\ RAW.useprecision=false
#type.TIMESTAMP(3).useprecision=false
#type.TIMESTAMP(6).useprecision=false
#type.TIMESTAMP(9).useprecision=false
#type.TIMESTAMP(3)\ WITH\ TIME\ ZONE.useprecision=false
#type.TIMESTAMP(6)\ WITH\ TIME\ ZONE.useprecision=false
#type.TIMESTAMP(9)\ WITH\ TIME\ ZONE.useprecision=false
#type.TIMESTAMP(3)\ WITH\ LOCAL\ TIME\ ZONE.useprecision=false
#type.TIMESTAMP(6)\ WITH\ LOCAL\ TIME\ ZONE.useprecision=false
#type.TIMESTAMP(9)\ WITH\ LOCAL\ TIME\ ZONE.useprecision=false

#postgresql
type.TEXT.useprecision=false
# 'timestamp' should not have precision (fractions of second)?
type.TIMESTAMP.useprecision=false
type.INT2.useprecision=false
type.INT4.useprecision=false
type.INT8.useprecision=false
type.FLOAT8.useprecision=false
type.BOOL.useprecision=false
type.SERIAL.useprecision=false
type.BIGSERIAL.useprecision=false

#mysql
type.MEDIUMTEXT.useprecision=false
type.DATETIME.useprecision=false
type.DOUBLE.useprecision=false

#msaccess
type.LONGCHAR.useprecision=false
type.LONGBINARY.useprecision=false


#
# tests for database conversion
#

# TODO: database-dependent '.useprecision' ?  
# TODO: families of dbids? pgsql: pgsql90-, pgsql, ...


#
# database-dependent types with no precision (default is true)
#

type.BIT@msaccess.useprecision=false
type.CURRENCY@msaccess.useprecision=false
type.REAL@msaccess.useprecision=false

#
# types of datatypes
#

types.integer=INTEGER, INT, INT2, INT4, INT8, TINYINT, SMALLINT, BIGINT
types.numeric=NUMBER, NUMERIC, DECIMAL, DOUBLE, FLOAT, FLOAT8, ${types.integer}
types.character=VARCHAR, CHARACTER VARYING, CHAR, CHARACTER, TEXT, VARCHAR2, CLOB?
types.datetime=TIMESTAMP, DATE, TIME
types.binary=BLOB, BYTEA, LONG RAW
types.boolean=BOOLEAN, BOOL

#
# known privileges
#
# XXXxx: define ${privileges.base}?
#
privileges.base  =SELECT, INSERT, UPDATE, DELETE, ALTER, REFERENCES, INDEX
#privileges.oracle=SELECT, INSERT, UPDATE, DELETE, ALTER, REFERENCES, INDEX, DEBUG, FLASHBACK, ON_COMMIT_REFRESH, QUERY_REWRITE
#privileges.pgsql=SELECT, INSERT, UPDATE, DELETE, ALTER, REFERENCES, INDEX, RULE, TRIGGER
privileges.oracle=${privileges.base}, DEBUG, FLASHBACK, ON_COMMIT_REFRESH, QUERY_REWRITE, EXECUTE
privileges.pgsql =${privileges.base}, RULE, TRIGGER


#
# script dump dbms specific features (XXX should be in 'features'?)
#
column.useautoincrement=h2, mysql


#
# db specific grab classes
#
dbms.oracle.specificgrabclass=tbrugz.sqldump.dbmsfeatures.OracleFeatures
dbms.pgsql.specificgrabclass=tbrugz.sqldump.dbmsfeatures.PostgreSQLFeatures
dbms.pgsql90-.specificgrabclass=tbrugz.sqldump.dbmsfeatures.PostgreSQL90Features
dbms.derby.specificgrabclass=tbrugz.sqldump.dbmsfeatures.DerbyFeatures
dbms.hsqldb.specificgrabclass=tbrugz.sqldump.dbmsfeatures.HSQLDBFeatures
dbms.mysql.specificgrabclass=tbrugz.sqldump.dbmsfeatures.MySQLFeatures
dbms.sqlite.specificgrabclass=tbrugz.sqldump.dbmsfeatures.SQLiteFeatures
dbms.h2.specificgrabclass=tbrugz.sqldump.dbmsfeatures.H2Features
dbms.monetdb.specificgrabclass=tbrugz.sqldump.dbmsfeatures.MonetDBFeatures
dbms.msaccess.specificgrabclass=tbrugz.sqldump.dbmsfeatures.MSAccessFeatures
dbms.drizzle.specificgrabclass=tbrugz.sqldump.dbmsfeatures.DrizzleFeatures
dbms.firebird.specificgrabclass=tbrugz.sqldump.dbmsfeatures.FirebirdFeatures
dbms.virtuoso.specificgrabclass=tbrugz.sqldump.dbmsfeatures.VirtuosoFeatures
dbms.sqlserver.specificgrabclass=tbrugz.sqldump.dbmsfeatures.MSSQLServerFeatures
dbms.db2.specificgrabclass=tbrugz.sqldump.dbmsfeatures.Db2Features
dbms.drill.specificgrabclass=tbrugz.sqldump.dbmsfeatures.ApacheDrillFeatures
dbms.presto.specificgrabclass=tbrugz.sqldump.dbmsfeatures.PrestoDbFeatures
dbms.spanner.specificgrabclass=tbrugz.sqldump.dbmsfeatures.SpannerFeatures

dbms.opendistro-elastic.specificgrabclass=tbrugz.sqldump.dbmd.DefaultDBMSFeatures
dbms.avatica.specificgrabclass=tbrugz.sqldump.dbmd.DefaultDBMSFeatures

dbms.<example>.specificgrabclass=tbrugz.sqldump.dbmsfeatures.InformationSchemaFeatures
dbms.<default>.specificgrabclass=tbrugz.sqldump.dbmd.DefaultDBMSFeatures
