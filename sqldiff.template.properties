
#
# TODO: copy/rename to sqldiff.properties
#

###############################################################################
# sqldiff config file                                                         #
# https://bitbucket.org/tbrugz/sqldump                                        #
###############################################################################

#
# sqldiff works like a unix diff utility, "patching" the source with the difference to produce the target
# alternatively: target (minuend) - source (subtrahend) == diff/patch ; source + diff == target
#
# see: http://en.wikipedia.org/wiki/Difference_(computer_science)
#
# source & target ids are defined by 'sqldiff.source' & 'sqldiff.target' properties
#

sqldiff.source=id1
sqldiff.target=id2

inputdir=input
outputdir=output
# patterns that may be used: [schemaname], [objecttype], [objectname], [changetype]
sqldiff.outfilepattern=${outputdir}/diff-[schemaname]-[objecttype].sql

# fail on error ? (default is true)
#sqldiff.failonerror=true|false

# when to use temp column strategy for column-diff 
# possible values: ALWAYS > TYPESDIFFER > NEWPRECISIONSMALLER > NEVER
# default is NEVER
sqldiff.columndifftempcolstrategy=NEVER

# XML input file. If defined, sqldiff ignores source & target grabbers
sqldiff.xmlinfile=${inputdir}/diff.xml

# XML output file. If defined, sqldiff also outputs the diff in XML format 
sqldiff.xmloutfile=${outputdir}/diff.xml

# optionally deletes regular files from dir before diff dump 
#sqldiff.deleteregularfilesfromdir=${outputdir}

#-----------------

### datadiff ###

# default is false (no datadiff)
sqldiff.dodatadiff=true|false
sqldiff.datadiff.outfilepattern=${outputdir}/datadiff/diff_[tablename]_[changetype].sql

# if no connection provided, datadiff may import sql inserts from file
# (by default, into h2 memory database)
sqldiff.datadiff.<id>.indatafilepattern=${outputdir}/dump/data_[tablename].sql

# optional properties
sqldiff.datadiff.tables=TABLE_X, TABLE_Y
sqldiff.datadiff.ignoretables=TABLE_Z, TABLE_ABC
sqldiff.datadiff.looplimit=1000
# charset to be used when importing sql inserts from files (default is UTF-8)
sqldiff.datadiff.importcharset=UTF-8|ISO-8859-1

#-----------------

# apply diff to id (db connection) - 'apply patch' - experimental

# apply diff (main prop)? use with caution - default is false 
#sqldiff.doapplydiff=true
# apply diff to source - default is false 
#sqldiff.applydifftosource=true

# apply schema diff? '.doapplydiff' prop must also be true
#sqldiff.doapplyschemadiff=true
# apply data diff? '.doapplydiff' & '.dodatadiff' props must also be true
#sqldiff.doapplydatadiff=true

#-----------------

# sqldump-inherited properties (defaults below)
#sqldump.schemadump.usecreateorreplace=false
#sqldump.schemadump.quoteallsqlidentifiers=false

# old sqldump properties
sqldump.dumpschemapattern=ZZZ

#-----------------

# grabclass can be: JDBCSchemaGrabber, JAXBSchemaXMLSerializer
# not yet sqldiff-ready: SchemaSerializer, CastorSchemaXMLSerializer

# id1 - JDBCSchemaGrabber
sqldiff.id1.grabclass=JDBCSchemaGrabber
# Derby Embedded
#sqldiff.id1.driverclass=org.apache.derby.jdbc.EmbeddedDriver
#sqldiff.id1.dburl=jdbc:derby:<db-path>
#sqldiff.id1.user=sa
#sqldiff.id1.password=sa

# id2 - JAXB
sqldiff.id2.grabclass=JAXBSchemaXMLSerializer
#sqldiff.id2.infile=work/schemaModel.jaxb.xml
