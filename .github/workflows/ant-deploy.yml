# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-ant

name: CI-deploy

on:
  push:
    branches: [ deploy ]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io
  REPOSITORY: https://maven.pkg.github.com/tbrugz/sqldump/

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Setup JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: maven

    - name: Setup Ivy cache
      uses: actions/cache@v3
      with:
        path: ~/.ivy2/cache
        key: ${{ runner.os }}-ivy-${{ hashFiles('**/ivy.xml') }}
        restore-keys: |
          ${{ runner.os }}-ivy-

    - name: Install Ivy + Maven Ant Tasks
      run: ant -noinput -buildfile build.xml ivy-install mvn-ant-tasks-install

    - name: Resolve Dependencies with Ivy
      run: ant -noinput -buildfile build.xml resolve

    - name: Build/Test with Ant
      run: ant -noinput -buildfile build.xml test dist

    - name: Build sqlmigrate with Maven
      run: mvn -V -B package --file sqlmigrate/pom.xml

    - name: Build sqldump-logback with Maven
      run: mvn -V -B package --file sqldump-logback/pom.xml

    - name: Publish ant-built artifacts to GitHub Packages
      run: mvn -V -B org.apache.maven.plugins:maven-deploy-plugin:deploy-file -Durl=${{ env.REPOSITORY }} -DrepositoryId=github -DpomFile=dist/poms/sqldump.pom -Dfile=dist/jars/sqldump.jar
      #run: ant -Dmaven-snapshots-repository-url=${{ env.REPOSITORY }} publish-sonatype-snapshot
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish maven-built artifacts to GitHub Packages
      run: mvn -V -B -DaltDeploymentRepository=github::default::${{ env.REPOSITORY }} deploy --file sqlmigrate/pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # docker stuff

    - name: Resolve docker dependencies
      run: ant -noinput -buildfile docker/build.xml resolve write-version

    - name: Set project version
      id: set_version
      run: echo PROJECT_VERSION=$(< dist/project-version.txt) >> $GITHUB_ENV

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) from Git repo for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push sqldump Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./docker/
        file: ./docker/Dockerfile.sqldump
        push: true
        tags: ${{ env.REGISTRY }}/${{ github.actor }}/sqldump:${{ env.PROJECT_VERSION }},${{ env.REGISTRY }}/${{ github.actor }}/sqldump:latest
        labels: ${{ steps.meta.outputs.labels }}

    - name: Extract metadata (tags, labels) from Git repo for Docker (sqlrun)
      id: meta-sqlrun
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/sqlrun

    - name: Build and push sqlrun Docker image (sqlrun)
      uses: docker/build-push-action@v4
      with:
        context: ./docker/
        file: ./docker/Dockerfile.sqlrun
        push: true
        tags: ${{ env.REGISTRY }}/${{ github.actor }}/sqlrun:${{ env.PROJECT_VERSION }},${{ env.REGISTRY }}/${{ github.actor }}/sqlrun:latest
        labels: ${{ steps.meta-sqlrun.outputs.labels }}

    - name: Extract metadata (tags, labels) from Git repo for Docker (sqldiff)
      id: meta-sqldiff
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/sqldiff

    - name: Build and push sqldiff Docker image (sqldiff)
      uses: docker/build-push-action@v4
      with:
        context: ./docker/
        file: ./docker/Dockerfile.sqldiff
        push: true
        tags: ${{ env.REGISTRY }}/${{ github.actor }}/sqldiff:${{ env.PROJECT_VERSION }},${{ env.REGISTRY }}/${{ github.actor }}/sqldiff:latest
        labels: ${{ steps.meta-sqldiff.outputs.labels }}

    - name: Extract metadata (tags, labels) from Git repo for Docker (diff2queries)
      id: meta-diff2queries
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/diff2queries

    - name: Build and push diff2queries Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./docker/
        file: ./docker/Dockerfile.diff2queries
        push: true
        tags: ${{ env.REGISTRY }}/${{ github.actor }}/diff2queries:${{ env.PROJECT_VERSION }},${{ env.REGISTRY }}/${{ github.actor }}/diff2queries:latest
        labels: ${{ steps.meta-diff2queries.outputs.labels }}

    - name: Extract metadata (tags, labels) from Git repo for Docker (sqlmigrate)
      id: meta-sqlmigrate
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/sqlmigrate

    - name: Build and push sqlmigrate Docker image (sqlmigrate)
      uses: docker/build-push-action@v4
      with:
        context: ./docker/
        file: ./docker/Dockerfile.sqlmigrate
        push: true
        tags: ${{ env.REGISTRY }}/${{ github.actor }}/sqlmigrate:${{ env.PROJECT_VERSION }},${{ env.REGISTRY }}/${{ github.actor }}/sqlmigrate:latest
        labels: ${{ steps.meta-sqlmigrate.outputs.labels }}
